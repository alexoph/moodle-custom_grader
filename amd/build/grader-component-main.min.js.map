{"version":3,"sources":["../src/grader-component-main.js"],"names":["define","Vuex","g_enums","g_store","component","template","computed","mapState","mapGetters","additionalColumnsAtFirstLength","additionalColumnsAtFirst","length","students","studentSetSorted","gradeHeaderColspan","courseLevel","colspan","additionalColumnsAtEndLength","mounted","$store","dispatch","actions","FETCH_STATE","name"],"mappings":"8eAAAA,OAAM,4CAAC,CACH,gCADG,CAEH,iCAFG,CAGH,iCAHG,CAAD,CAIH,SAAUC,CAAV,CAAgBC,CAAhB,CAAyBC,CAAzB,CAAkC,IA8C7BC,CAAAA,CAAS,CAAI,CACbC,QAAQ,+rEADK,CAEbC,QAAQ,kBACDL,CAAI,CAACM,QAAL,CAAc,CACb,QADa,CAEb,YAFa,CAGb,0BAHa,CAIb,wBAJa,CAAd,CADC,CAODN,CAAI,CAACO,UAAL,CAAgB,CACf,eADe,CAEf,YAFe,CAGf,sBAHe,CAIf,gBAJe,CAKf,kBALe,CAMf,WANe,CAOf,aAPe,CAAhB,CAPC,EAgBJC,8BAA8B,CAAE,yCAAY,CACxC,MAAO,MAAKC,wBAAL,CAA8BC,MACxC,CAlBG,CAmBJC,QAAQ,CAAE,mBAAW,CACjB,MAAO,MAAKC,gBACf,CArBG,CAsBJC,kBAAkB,CAAE,6BAAY,CAC5B,MAAO,CAAO,KAAKC,WAAL,CAAiBC,OAAxB,CAAmC,KAAKC,4BAClD,CAxBG,EAFK,CA6BbC,OAAO,CAAE,kBAAY,CACjB,KAAKC,MAAL,CAAYC,QAAZ,CAAqBjB,CAAO,CAACkB,OAAR,CAAgBC,WAArC,CACH,CA/BY,CA9CgB,CA+ElC,MAAO,CACJlB,SAAS,CAAEA,CADP,CAEJmB,IAAI,CApCK,MAkCL,CAIT,CAvFK,CAAN","sourcesContent":["define([\n    'local_customgrader/vendor-vuex',\n    'local_customgrader/grader-enums',\n    'local_customgrader/grader-store'\n], function (Vuex, g_enums, g_store) {\n    var template = `\n            <div class=\"customgrader\">\n                <table v-if=\"students.length > 0\" id=\"user-grades\"  class=\"table\">\n                    <tbody>\n                        <!-- COURSE_TR -->\n                        <tr class=\"GridViewScrollHeader\" >\n                            <th-course colspan=\"2\"></th-course>\n                        </tr>\n                        <!-- END OF COURSE_TR -->\n                        <!-- CATEGORIES_TRS-->\n                        <tr  v-for=\"categoryLevel in categoryLevels\" >\n                            <th v-bind:colspan=\"additionalColumnsAtFirstLength\"></th>\n                            <template v-for=\"(element, index) in categoryLevel\">\n                                <th v-if=\"element.type==='fillerfirst'\" v-bind:colspan=\"element.colspan\"></th>\n                                <th-category v-if=\"element.type === 'category' \" v-bind:colspan=\"element.colspan\" v-bind:element=\"element\">\n                                   \n                                </th-category>\n                                <th \n                                class=\"th-filler\"\n                                v-if=\"element.type === 'filler' || element.type === 'fillerlast'\" \n                                v-bind:colspan=\"element.colspan\"\n                                ></th>\n                            </template>\n                        </tr>\n                        <!-- END OF CATEGORIES_TRS-->\n                        <tr-items>  </tr-items>\n                        <tr-grades \n                        v-for=\"(student, index) in students\" \n                        v-bind:studentId=\"student.id\" \n                        v-bind:studentIndex=\"index\" \n                        :key=\"student.id\"\n                        ></tr-grades>\n                    </tbody>\n                </table>\n                <div v-else>\n                    Cargando informaci√≥n...\n                </div>\n                <div id=\"modals\">\n                    <modal-edit-category></modal-edit-category>\n                    <modal-add-element></modal-add-element>\n                </div>\n                <v-dialog/>\n            </div>\n    `;\n    var name = 'Main';\n    var component  = {\n        template: template,\n        computed: {\n            ...Vuex.mapState([\n                'course',\n                'categories',\n                'additionalColumnsAtFirst',\n                'additionalColumnsAtEnd'\n            ]),\n            ...Vuex.mapGetters([\n                'categoryDepth',\n                'itemsCount',\n                'getCategoriesByDepth',\n                'categoryLevels',\n                'studentSetSorted',\n                'itemLevel',\n                'courseLevel'\n            ]),\n            additionalColumnsAtFirstLength: function () {\n                return this.additionalColumnsAtFirst.length;\n            },\n            students: function() {\n                return this.studentSetSorted;\n            },\n            gradeHeaderColspan: function () {\n                return Number(this.courseLevel.colspan) + this.additionalColumnsAtEndLength;\n            }\n\n        },\n        mounted: function () {\n            this.$store.dispatch(g_store.actions.FETCH_STATE);\n        }\n    };\n   return {\n      component: component,\n      name: name\n   }\n});"],"file":"grader-component-main.min.js"}